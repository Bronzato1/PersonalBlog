@model PersonalBlog.ViewModels.UpdatePostViewModel

@{
    bool isNew = string.IsNullOrEmpty(Model.Post.Title);
    ViewData["Title"] = Model.Post.Title ?? "New post";
    var host = Context.Request.Host.ToString();
    Layout = "~/Views/Shared/_LayoutBlog.cshtml";
}

@section head{
    <link rel="stylesheet" href="~/css/admin.css" />
}

@section headerNavItems {
    <li class="nav-item pr-2">
        <a asp-controller="Blog" asp-action="Index" class="nav-link btn btn-default btn-sm">
            <i class="fas fa-arrow-left"></i> Back to list
        </a>
    </li>
    <li class="nav-item pr-2">
        <a href="#" asp class="nav-link btn btn-default btn-sm" onclick="$('#Post_Edit').submit();">
            <i class="fas fa-save"></i> Save
        </a>
    </li>
    @if (!isNew)
    {
        <li class="nav-item pr-2">
            <button class="nav-link btn btn-default btn-sm deletePostA" asp-action="DeletePostA" asp-route-id="@Model.Post.Id" form="Post_Edit">
                <i class="fas fa-minus-circle"></i>
                <strong> Delete</strong>
            </button>
        </li>
    }
}

<div class="card card-widget card-blog-post">
    <div class="card-header">
        <div class="user-block">
            <img class="img-circle elevation-2" gravatar-for="@Model.Post.CustomUser" alt="User Image" />
            <span class="username">
                @ViewData["Title"]
            </span>
            <span class="description">
                Posted by Thierry on monday 20
            </span>
            
        </div>
        <!-- /.user-block -->
        <div class="card-tools">
            <a href="#" class="btn btn-tool" onclick="fullScreenMode()" title="Full screen mode">
                <i class="fas fa-expand-arrows-alt"></i>
            </a>
            <a asp-controller="Blog" asp-action="Index" class="btn btn-tool" title="Back to list">
                <i class="fas fa-arrow-left"></i>
            </a>
        </div>
        <!-- /.card-tools -->
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <form method="post" id="Post_Edit" class="container" asp-controller="Blog" asp-action="UpdatePost">
            
            <div asp-validation-summary="All"></div>
            <input type="hidden" asp-for="@Model.Post.Id" />
            <input type="hidden" asp-for="@Model.Post.CustomUserId" />

            <div class="form-group">
                <label asp-for="@Model.Post.Title" class="label">Title</label>
                <input asp-for="@Model.Post.Title" required placeholder="Title of blog post" aria-describedby="desc_title" />
            </div>
        
            <div class="form-group">
                <label asp-for="@Model.Post.Slug" class="label">Slug</label>
                <input asp-for="@Model.Post.Slug" placeholder="The URL name" aria-describedby="desc_slug" />
            </div>

            <div class="form-group">
                <label for="SelectedCategories" class="label">Tags</label>
                <select multiple="multiple" class="form-control custom-select select2" asp-for="@Model.SelectedCategories" asp-items="@Model.SelCategories">
                </select>
            </div>

            <div class="form-group">
                <label asp-for="@Model.Post.Excerpt" class="label">Excerpt</label>
                <textarea asp-for="@Model.Post.Excerpt" rows="3" placeholder="Short description of blog post" aria-describedby="desc_excerpt">@Model.Post.Excerpt</textarea>
            </div>

            <div class="form-group">
                <label asp-for="@Model.Post.Excerpt" class="label">Content</label>
                <textarea asp-for="@Model.Post.Content" rows="20" aria-label="Content">@Model.Post.Content</textarea>
            </div>

            <input asp-for="@Model.Post.IsPublished" />
            <label asp-for="@Model.Post.IsPublished">Is published</label>

        </form>
    </div>

</div><!--/.card-->

@section Scripts {

    <script src="//@host/lib/tinymce/tinymce.min.js"></script>  @* with enabled CDN tinymce is not able to find some files *@
    
    <script>

        $(function () {

            // ┌────────────────────┐
            // │ Initialize Select2 │
            // └────────────────────┘

            $('.select2').select2({
                tags: true
            });

            fullScreenMode = function()
            {
                var isFullScreen = $('.card-blog-post').first().hasClass('full-screen-mode');

                if (isFullScreen)
                {
                    $('.card-blog-post').first().removeClass('full-screen-mode');
                }
                else
                {
                    $('.card-blog-post').first().addClass('full-screen-mode');
                }
                
            }

            // ┌────────────────────────────┐
            // │ Delete Post A Confirmation │
            // └────────────────────────────┘

            var deleteButton = document.querySelector(".deletePostA");
            if (deleteButton) {
                deleteButton.addEventListener("click", function (e) {
                    if (!confirm("Are you sure you want to delete the post?")) {
                        e.preventDefault();
                    }
                });
            }

            // ┌──────────────────────────┐
            // │ Configure TinyMCE Editor │
            // └──────────────────────────┘

            var editForm = document.getElementById("Post_Edit");
            var contentEditor = document.getElementById("Post_Content");

            if (editForm && contentEditor) {

                if (typeof window.orientation !== "undefined" || navigator.userAgent.indexOf('IEMobile') !== -1) {
                    tinymce.init({
                        selector: '#Post_Content',
                        theme: 'modern',
                        mobile: {
                            theme: 'mobile',
                            plugins: ['autosave', 'lists', 'autolink'],
                            toolbar: ['undo', 'bold', 'italic', 'styleselect']
                        }
                    });
                } else {
                    tinymce.init({
                        selector: '#Post_Content',
                        autoresize_min_height: 200,
                        plugins: 'autosave preview searchreplace visualchars image link media fullscreen code codesample table hr pagebreak autoresize nonbreaking anchor insertdatetime advlist lists textcolor wordcount imagetools colorpicker',
                        menubar: "edit view format insert table",
                        toolbar1: 'formatselect | bold italic blockquote forecolor backcolor | imageupload link | alignleft aligncenter alignright  | numlist bullist outdent indent | fullscreen linenumbers',
                        selection_toolbar: 'bold italic | quicklink h2 h3 blockquote',
                        autoresize_bottom_margin: 0,
                        paste_data_images: true,
                        image_advtab: true,
                        file_picker_types: 'image',
                        relative_urls: false,
                        convert_urls: false,
                        branding: false,

                        setup: function (editor) {
                            editor.addButton('imageupload', {
                                icon: "image",
                                onclick: function () {
                                    var fileInput = document.createElement("input");
                                    fileInput.type = "file";
                                    fileInput.multiple = true;
                                    fileInput.accept = "image/*";
                                    fileInput.addEventListener("change", handleFileSelect, false);
                                    fileInput.click();
                                }
                            });
                            editor.addButton('linenumbers', {
                                icon: 'numlist',
                                tooltip: 'Add line numbers for code blocks',
                                onclick: function () {
                                    var currentNode = tinyMCE.activeEditor.selection.getNode();
                                    if (currentNode.tagName !== 'PRE') {
                                        alert('PRE tag required');
                                        return;
                                    }
                                    tinyMCE.activeEditor.dom.addClass(currentNode, 'line-numbers');
                                }
                            });
                        }
                    });
                }
            }
        })
        
    </script>
}